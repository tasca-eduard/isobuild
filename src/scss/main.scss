@import "./shared/variables";

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Montserrat', sans-serif;
  color: $primaryText;
}

html {
  font-size: 14px;
  line-height: 1.6;
  scroll-behavior: smooth;
  scrollbar-width: thin;
}

body {
  background: $primaryBg;
  width: 100%;
}

.tileset {
  position: fixed;
  top: 50%;
  left: 50%;
  transform-style: preserve-3d;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5px;
  transition: .7s cubic-bezier(0.23, 1, 0.320, 1);

  .tile {
    width: 256px;
    height: 256px;
    background: $secondaryBg;
    box-shadow: inset 0 0 25px 5px darken($secondaryBg, 2%);
    border: 2px solid $ternaryBg;
    border-radius: 15px;
    transition: .2s ease-in-out;
    cursor: pointer;
    outline: none;
    border: 2px solid $ternaryBg;
    position: relative;
    // important to have preserve-3d so children will not be affected by stacking context
    transform-style: preserve-3d;
    font-size: 24px;
    display: grid;
    place-items: center;

    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate3d(-50%, -50%, -60px);
      border-radius: 50%;
      transition: .2s ease-in-out;
      animation: 1s glow2 alternate infinite cubic-bezier(0.445, 0.05, 0.55, 0.95);
    }

    &:hover,
    &:focus-visible,
    &.selected {
      transform: translateZ(10px);
      background: lighten($secondaryBg, 1%);
      box-shadow: inset 0 0 25px 5px darken($secondaryBg, 3%);

      &::after {
        transform: translate3d(-50%, -50%, -70px);
      }

      .cube {
        &::after {
          box-shadow: 0 0 50px 20px $statusPaidBg;
        }

        .front {
          transform: translateZ(88px);
        }

        .back {
          transform: translateZ(-88px) rotateY(180deg);
        }

        .left {
          transform: translateX(-88px) rotateY(-90deg);
        }

        .right {
          transform: translateX(88px) rotateY(90deg);
          background: darken($secondaryBg, .7%);
        }

        .top {
          transform: translateY(-88px) rotateX(90deg);
        }

        .bottom {
          transform: translateY(88px) rotateX(-90deg);
        }
      }
    }

    &.success {
      &::after {
        box-shadow: 0 0 80px 40px $statusPaidBg;
      }

      .cube {
        &::after {
          box-shadow: 0 0 32px 20px $statusPaidBg;
        }
      }

      &:hover,
      &:focus-visible {
        &::after {
          box-shadow: 0 0 100px 30px $statusPaidBg;
        }

        .cube {
          &::after {
            box-shadow: 0 0 50px 20px $statusPaidBg;
          }
        }
      }
    }

    &.pending {
      &::after {
        box-shadow: 0 0 80px 40px $statusPendingBg;
      }

      .cube {
        &::after {
          box-shadow: 0 0 32px 20px $statusPendingBg;
        }
      }

      &:hover,
      &:focus-visible {
        &::after {
          box-shadow: 0 0 100px 30px $statusPendingBg;
        }

        .cube {
          &::after {
            box-shadow: 0 0 50px 20px $statusPendingBg;
          }
        }
      }
    }

    &.fail {
      &::after {
        box-shadow: 0 0 80px 40px $statusUnpaidBg;
      }

      .cube {
        &::after {
          box-shadow: 0 0 32px 20px $statusUnpaidBg;
        }
      }

      &:hover,
      &:focus-visible {
        &::after {
          box-shadow: 0 0 100px 30px $statusUnpaidBg;
        }

        .cube {
          &::after {
            box-shadow: 0 0 50px 20px $statusUnpaidBg;
          }
        }
      }
    }
  }
}

.controls {
  position: fixed;
  bottom: 256px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  pointer-events: none;

  .btn {
    margin: 0 320px;
    min-width: 120px;
    pointer-events: all;
  }

  span {
    padding: 0 10px;
    font-size: 22px;
    line-height: 1;
  }
}

.btn {
  border: none;
  border: 2px solid $secondaryBg;
  border-bottom: 2px solid $primaryBorder;
  border-radius: 6px;
  background: $inputBg;
  padding: 10px;
  text-transform: uppercase;
  font-weight: 700;
  cursor: pointer;
  transition: .2s cubic-bezier(0.165, 0.84, 0.44, 1);
  margin: 0 auto;
  color: $primaryText;

  &:hover,
  &:focus-visible {
    background: darken($inputBg, 1%);
    border-bottom: 2px solid $accent;
    outline: none;
  }
}

.cube {
  display: grid;
  position: relative;
  width: 128px;
  height: 128px;
  transform-style: preserve-3d;
  transform: translateZ(74px);

  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 20px 20px $statusPaidBg;
    transition: .2s ease-in-out;
    animation: 1s glow alternate infinite cubic-bezier(0.445, 0.05, 0.55, 0.95);
  }

  .face {
    border-radius: 15px;
    box-shadow: inset 0 0 20px 0 darken($secondaryBg, 2%);
    background: $secondaryBg;
    position: absolute;
    width: 128px;
    height: 128px;
    transition: .2s ease-in-out;
  }

  .front {
    transform: translateZ(64px);
  }

  .back {
    transform: translateZ(-64px) rotateY(180deg);
  }

  .left {
    transform: translateX(-64px) rotateY(-90deg);
  }

  .right {
    transform: translateX(64px) rotateY(90deg);
    background: darken($secondaryBg, .7%);
  }

  .top {
    transform: translateY(-64px) rotateX(90deg);
  }

  .bottom {
    transform: translateY(64px) rotateX(-90deg);
  }
}

@keyframes glow {
  from {
    transform: translateZ(5px);
  }

  to {
    transform: translateZ(0);
  }
}

@keyframes glow2 {
  from {
    transform: translateZ(-55px);
  }

  to {
    transform: translateZ(-60px);
  }
}